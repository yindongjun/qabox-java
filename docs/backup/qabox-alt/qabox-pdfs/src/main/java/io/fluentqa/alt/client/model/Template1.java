/*
 * API v1
 * DocSpring is a service that helps you fill out and sign PDF templates.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.fluentqa.alt.client.model;

import java.util.Objects;

import io.fluentqa.alt.client.model.Template1Defaults;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.fluentqa.alt.client.JSON;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.util.HashSet;
import java.util.Map.Entry;
import java.util.Set;

import io.fluentqa.alt.client.JSON;

/**
 * Template1
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-03-07T00:51:44.596816+08:00[Asia/Hong_Kong]")
public class Template1 {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_PUBLIC_WEB_FORM = "public_web_form";
  @SerializedName(SERIALIZED_NAME_PUBLIC_WEB_FORM)
  private Boolean publicWebForm;

  public static final String SERIALIZED_NAME_PUBLIC_SUBMISSIONS = "public_submissions";
  @SerializedName(SERIALIZED_NAME_PUBLIC_SUBMISSIONS)
  private Boolean publicSubmissions;

  public static final String SERIALIZED_NAME_EXPIRE_SUBMISSIONS = "expire_submissions";
  @SerializedName(SERIALIZED_NAME_EXPIRE_SUBMISSIONS)
  private Boolean expireSubmissions;

  public static final String SERIALIZED_NAME_EXPIRE_AFTER = "expire_after";
  @SerializedName(SERIALIZED_NAME_EXPIRE_AFTER)
  private BigDecimal expireAfter;

  /**
   * Gets or Sets expirationInterval
   */
  @JsonAdapter(ExpirationIntervalEnum.Adapter.class)
  public enum ExpirationIntervalEnum {
    MINUTES("minutes"),
    
    HOURS("hours"),
    
    DAYS("days");

    private String value;

    ExpirationIntervalEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ExpirationIntervalEnum fromValue(String value) {
      for (ExpirationIntervalEnum b : ExpirationIntervalEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ExpirationIntervalEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ExpirationIntervalEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ExpirationIntervalEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ExpirationIntervalEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_EXPIRATION_INTERVAL = "expiration_interval";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_INTERVAL)
  private ExpirationIntervalEnum expirationInterval;

  public static final String SERIALIZED_NAME_ALLOW_ADDITIONAL_PROPERTIES = "allow_additional_properties";
  @SerializedName(SERIALIZED_NAME_ALLOW_ADDITIONAL_PROPERTIES)
  private Boolean allowAdditionalProperties;

  public static final String SERIALIZED_NAME_EDITABLE_SUBMISSIONS = "editable_submissions";
  @SerializedName(SERIALIZED_NAME_EDITABLE_SUBMISSIONS)
  private Boolean editableSubmissions;

  public static final String SERIALIZED_NAME_LOCKED = "locked";
  @SerializedName(SERIALIZED_NAME_LOCKED)
  private Boolean locked;

  public static final String SERIALIZED_NAME_WEBHOOK_URL = "webhook_url";
  @SerializedName(SERIALIZED_NAME_WEBHOOK_URL)
  private String webhookUrl;

  public static final String SERIALIZED_NAME_SLACK_WEBHOOK_URL = "slack_webhook_url";
  @SerializedName(SERIALIZED_NAME_SLACK_WEBHOOK_URL)
  private String slackWebhookUrl;

  public static final String SERIALIZED_NAME_REDIRECT_URL = "redirect_url";
  @SerializedName(SERIALIZED_NAME_REDIRECT_URL)
  private String redirectUrl;

  public static final String SERIALIZED_NAME_FIRST_TEMPLATE = "first_template";
  @SerializedName(SERIALIZED_NAME_FIRST_TEMPLATE)
  private Boolean firstTemplate;

  public static final String SERIALIZED_NAME_HTML = "html";
  @SerializedName(SERIALIZED_NAME_HTML)
  private String html;

  public static final String SERIALIZED_NAME_HEADER_HTML = "header_html";
  @SerializedName(SERIALIZED_NAME_HEADER_HTML)
  private String headerHtml;

  public static final String SERIALIZED_NAME_FOOTER_HTML = "footer_html";
  @SerializedName(SERIALIZED_NAME_FOOTER_HTML)
  private String footerHtml;

  public static final String SERIALIZED_NAME_SCSS = "scss";
  @SerializedName(SERIALIZED_NAME_SCSS)
  private String scss;

  public static final String SERIALIZED_NAME_ENCRYPT_PDFS = "encrypt_pdfs";
  @SerializedName(SERIALIZED_NAME_ENCRYPT_PDFS)
  private Boolean encryptPdfs;

  public static final String SERIALIZED_NAME_ENCRYPT_PDFS_PASSWORD = "encrypt_pdfs_password";
  @SerializedName(SERIALIZED_NAME_ENCRYPT_PDFS_PASSWORD)
  private String encryptPdfsPassword;

  public static final String SERIALIZED_NAME_DEFAULTS = "defaults";
  @SerializedName(SERIALIZED_NAME_DEFAULTS)
  private Template1Defaults defaults;

  public static final String SERIALIZED_NAME_FIELDS = "fields";
  @SerializedName(SERIALIZED_NAME_FIELDS)
  private Object fields;

  public static final String SERIALIZED_NAME_SHARED_FIELD_DATA = "shared_field_data";
  @SerializedName(SERIALIZED_NAME_SHARED_FIELD_DATA)
  private Object sharedFieldData;

  public static final String SERIALIZED_NAME_FIELD_ORDER = "field_order";
  @SerializedName(SERIALIZED_NAME_FIELD_ORDER)
  private List<List<BigDecimal>> fieldOrder = new ArrayList<>();

  public static final String SERIALIZED_NAME_DOCUMENT_MD5 = "document_md5";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_MD5)
  private String documentMd5;

  public static final String SERIALIZED_NAME_DOCUMENT_FILENAME = "document_filename";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_FILENAME)
  private String documentFilename;

  public static final String SERIALIZED_NAME_DOCUMENT_PARSE_ERROR = "document_parse_error";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_PARSE_ERROR)
  private Boolean documentParseError;

  public static final String SERIALIZED_NAME_DOCUMENT_STATE = "document_state";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_STATE)
  private String documentState;

  public static final String SERIALIZED_NAME_EMBED_DOMAINS = "embed_domains";
  @SerializedName(SERIALIZED_NAME_EMBED_DOMAINS)
  private List<String> embedDomains = new ArrayList<>();

  public static final String SERIALIZED_NAME_PAGE_COUNT = "page_count";
  @SerializedName(SERIALIZED_NAME_PAGE_COUNT)
  private BigDecimal pageCount;

  public static final String SERIALIZED_NAME_DOCUMENT_PROCESSED = "document_processed";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_PROCESSED)
  private Boolean documentProcessed;

  public static final String SERIALIZED_NAME_DEMO = "demo";
  @SerializedName(SERIALIZED_NAME_DEMO)
  private Boolean demo;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_TEMPLATE_TYPE = "template_type";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_TYPE)
  private String templateType;

  public static final String SERIALIZED_NAME_PAGE_DIMENSIONS = "page_dimensions";
  @SerializedName(SERIALIZED_NAME_PAGE_DIMENSIONS)
  private List<List<BigDecimal>> pageDimensions = new ArrayList<>();

  public static final String SERIALIZED_NAME_DOCUMENT_URL = "document_url";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_URL)
  private String documentUrl;

  public static final String SERIALIZED_NAME_PERMANENT_DOCUMENT_URL = "permanent_document_url";
  @SerializedName(SERIALIZED_NAME_PERMANENT_DOCUMENT_URL)
  private String permanentDocumentUrl;

  public static final String SERIALIZED_NAME_PATH = "path";
  @SerializedName(SERIALIZED_NAME_PATH)
  private String path;

  public static final String SERIALIZED_NAME_PARENT_FOLDER_ID = "parent_folder_id";
  @SerializedName(SERIALIZED_NAME_PARENT_FOLDER_ID)
  private String parentFolderId;

  public Template1() { 
  }

  public Template1 name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Template1 description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public Template1 publicWebForm(Boolean publicWebForm) {
    
    this.publicWebForm = publicWebForm;
    return this;
  }

   /**
   * Get publicWebForm
   * @return publicWebForm
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getPublicWebForm() {
    return publicWebForm;
  }


  public void setPublicWebForm(Boolean publicWebForm) {
    this.publicWebForm = publicWebForm;
  }


  public Template1 publicSubmissions(Boolean publicSubmissions) {
    
    this.publicSubmissions = publicSubmissions;
    return this;
  }

   /**
   * Get publicSubmissions
   * @return publicSubmissions
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getPublicSubmissions() {
    return publicSubmissions;
  }


  public void setPublicSubmissions(Boolean publicSubmissions) {
    this.publicSubmissions = publicSubmissions;
  }


  public Template1 expireSubmissions(Boolean expireSubmissions) {
    
    this.expireSubmissions = expireSubmissions;
    return this;
  }

   /**
   * Get expireSubmissions
   * @return expireSubmissions
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getExpireSubmissions() {
    return expireSubmissions;
  }


  public void setExpireSubmissions(Boolean expireSubmissions) {
    this.expireSubmissions = expireSubmissions;
  }


  public Template1 expireAfter(BigDecimal expireAfter) {
    
    this.expireAfter = expireAfter;
    return this;
  }

   /**
   * Get expireAfter
   * @return expireAfter
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getExpireAfter() {
    return expireAfter;
  }


  public void setExpireAfter(BigDecimal expireAfter) {
    this.expireAfter = expireAfter;
  }


  public Template1 expirationInterval(ExpirationIntervalEnum expirationInterval) {
    
    this.expirationInterval = expirationInterval;
    return this;
  }

   /**
   * Get expirationInterval
   * @return expirationInterval
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public ExpirationIntervalEnum getExpirationInterval() {
    return expirationInterval;
  }


  public void setExpirationInterval(ExpirationIntervalEnum expirationInterval) {
    this.expirationInterval = expirationInterval;
  }


  public Template1 allowAdditionalProperties(Boolean allowAdditionalProperties) {
    
    this.allowAdditionalProperties = allowAdditionalProperties;
    return this;
  }

   /**
   * Get allowAdditionalProperties
   * @return allowAdditionalProperties
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getAllowAdditionalProperties() {
    return allowAdditionalProperties;
  }


  public void setAllowAdditionalProperties(Boolean allowAdditionalProperties) {
    this.allowAdditionalProperties = allowAdditionalProperties;
  }


  public Template1 editableSubmissions(Boolean editableSubmissions) {
    
    this.editableSubmissions = editableSubmissions;
    return this;
  }

   /**
   * Get editableSubmissions
   * @return editableSubmissions
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getEditableSubmissions() {
    return editableSubmissions;
  }


  public void setEditableSubmissions(Boolean editableSubmissions) {
    this.editableSubmissions = editableSubmissions;
  }


  public Template1 locked(Boolean locked) {
    
    this.locked = locked;
    return this;
  }

   /**
   * Get locked
   * @return locked
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getLocked() {
    return locked;
  }


  public void setLocked(Boolean locked) {
    this.locked = locked;
  }


  public Template1 webhookUrl(String webhookUrl) {
    
    this.webhookUrl = webhookUrl;
    return this;
  }

   /**
   * Get webhookUrl
   * @return webhookUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getWebhookUrl() {
    return webhookUrl;
  }


  public void setWebhookUrl(String webhookUrl) {
    this.webhookUrl = webhookUrl;
  }


  public Template1 slackWebhookUrl(String slackWebhookUrl) {
    
    this.slackWebhookUrl = slackWebhookUrl;
    return this;
  }

   /**
   * Get slackWebhookUrl
   * @return slackWebhookUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getSlackWebhookUrl() {
    return slackWebhookUrl;
  }


  public void setSlackWebhookUrl(String slackWebhookUrl) {
    this.slackWebhookUrl = slackWebhookUrl;
  }


  public Template1 redirectUrl(String redirectUrl) {
    
    this.redirectUrl = redirectUrl;
    return this;
  }

   /**
   * Get redirectUrl
   * @return redirectUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getRedirectUrl() {
    return redirectUrl;
  }


  public void setRedirectUrl(String redirectUrl) {
    this.redirectUrl = redirectUrl;
  }


  public Template1 firstTemplate(Boolean firstTemplate) {
    
    this.firstTemplate = firstTemplate;
    return this;
  }

   /**
   * Get firstTemplate
   * @return firstTemplate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getFirstTemplate() {
    return firstTemplate;
  }


  public void setFirstTemplate(Boolean firstTemplate) {
    this.firstTemplate = firstTemplate;
  }


  public Template1 html(String html) {
    
    this.html = html;
    return this;
  }

   /**
   * Get html
   * @return html
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getHtml() {
    return html;
  }


  public void setHtml(String html) {
    this.html = html;
  }


  public Template1 headerHtml(String headerHtml) {
    
    this.headerHtml = headerHtml;
    return this;
  }

   /**
   * Get headerHtml
   * @return headerHtml
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getHeaderHtml() {
    return headerHtml;
  }


  public void setHeaderHtml(String headerHtml) {
    this.headerHtml = headerHtml;
  }


  public Template1 footerHtml(String footerHtml) {
    
    this.footerHtml = footerHtml;
    return this;
  }

   /**
   * Get footerHtml
   * @return footerHtml
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getFooterHtml() {
    return footerHtml;
  }


  public void setFooterHtml(String footerHtml) {
    this.footerHtml = footerHtml;
  }


  public Template1 scss(String scss) {
    
    this.scss = scss;
    return this;
  }

   /**
   * Get scss
   * @return scss
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getScss() {
    return scss;
  }


  public void setScss(String scss) {
    this.scss = scss;
  }


  public Template1 encryptPdfs(Boolean encryptPdfs) {
    
    this.encryptPdfs = encryptPdfs;
    return this;
  }

   /**
   * Get encryptPdfs
   * @return encryptPdfs
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getEncryptPdfs() {
    return encryptPdfs;
  }


  public void setEncryptPdfs(Boolean encryptPdfs) {
    this.encryptPdfs = encryptPdfs;
  }


  public Template1 encryptPdfsPassword(String encryptPdfsPassword) {
    
    this.encryptPdfsPassword = encryptPdfsPassword;
    return this;
  }

   /**
   * Get encryptPdfsPassword
   * @return encryptPdfsPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getEncryptPdfsPassword() {
    return encryptPdfsPassword;
  }


  public void setEncryptPdfsPassword(String encryptPdfsPassword) {
    this.encryptPdfsPassword = encryptPdfsPassword;
  }


  public Template1 defaults(Template1Defaults defaults) {
    
    this.defaults = defaults;
    return this;
  }

   /**
   * Get defaults
   * @return defaults
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Template1Defaults getDefaults() {
    return defaults;
  }


  public void setDefaults(Template1Defaults defaults) {
    this.defaults = defaults;
  }


  public Template1 fields(Object fields) {
    
    this.fields = fields;
    return this;
  }

   /**
   * Get fields
   * @return fields
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Object getFields() {
    return fields;
  }


  public void setFields(Object fields) {
    this.fields = fields;
  }


  public Template1 sharedFieldData(Object sharedFieldData) {
    
    this.sharedFieldData = sharedFieldData;
    return this;
  }

   /**
   * Get sharedFieldData
   * @return sharedFieldData
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Object getSharedFieldData() {
    return sharedFieldData;
  }


  public void setSharedFieldData(Object sharedFieldData) {
    this.sharedFieldData = sharedFieldData;
  }


  public Template1 fieldOrder(List<List<BigDecimal>> fieldOrder) {
    
    this.fieldOrder = fieldOrder;
    return this;
  }

  public Template1 addFieldOrderItem(List<BigDecimal> fieldOrderItem) {
    this.fieldOrder.add(fieldOrderItem);
    return this;
  }

   /**
   * Get fieldOrder
   * @return fieldOrder
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<List<BigDecimal>> getFieldOrder() {
    return fieldOrder;
  }


  public void setFieldOrder(List<List<BigDecimal>> fieldOrder) {
    this.fieldOrder = fieldOrder;
  }


  public Template1 documentMd5(String documentMd5) {
    
    this.documentMd5 = documentMd5;
    return this;
  }

   /**
   * Get documentMd5
   * @return documentMd5
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getDocumentMd5() {
    return documentMd5;
  }


  public void setDocumentMd5(String documentMd5) {
    this.documentMd5 = documentMd5;
  }


  public Template1 documentFilename(String documentFilename) {
    
    this.documentFilename = documentFilename;
    return this;
  }

   /**
   * Get documentFilename
   * @return documentFilename
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getDocumentFilename() {
    return documentFilename;
  }


  public void setDocumentFilename(String documentFilename) {
    this.documentFilename = documentFilename;
  }


  public Template1 documentParseError(Boolean documentParseError) {
    
    this.documentParseError = documentParseError;
    return this;
  }

   /**
   * Get documentParseError
   * @return documentParseError
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getDocumentParseError() {
    return documentParseError;
  }


  public void setDocumentParseError(Boolean documentParseError) {
    this.documentParseError = documentParseError;
  }


  public Template1 documentState(String documentState) {
    
    this.documentState = documentState;
    return this;
  }

   /**
   * Get documentState
   * @return documentState
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getDocumentState() {
    return documentState;
  }


  public void setDocumentState(String documentState) {
    this.documentState = documentState;
  }


  public Template1 embedDomains(List<String> embedDomains) {
    
    this.embedDomains = embedDomains;
    return this;
  }

  public Template1 addEmbedDomainsItem(String embedDomainsItem) {
    this.embedDomains.add(embedDomainsItem);
    return this;
  }

   /**
   * Get embedDomains
   * @return embedDomains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public List<String> getEmbedDomains() {
    return embedDomains;
  }


  public void setEmbedDomains(List<String> embedDomains) {
    this.embedDomains = embedDomains;
  }


  public Template1 pageCount(BigDecimal pageCount) {
    
    this.pageCount = pageCount;
    return this;
  }

   /**
   * Get pageCount
   * @return pageCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getPageCount() {
    return pageCount;
  }


  public void setPageCount(BigDecimal pageCount) {
    this.pageCount = pageCount;
  }


  public Template1 documentProcessed(Boolean documentProcessed) {
    
    this.documentProcessed = documentProcessed;
    return this;
  }

   /**
   * Get documentProcessed
   * @return documentProcessed
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getDocumentProcessed() {
    return documentProcessed;
  }


  public void setDocumentProcessed(Boolean documentProcessed) {
    this.documentProcessed = documentProcessed;
  }


  public Template1 demo(Boolean demo) {
    
    this.demo = demo;
    return this;
  }

   /**
   * Get demo
   * @return demo
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getDemo() {
    return demo;
  }


  public void setDemo(Boolean demo) {
    this.demo = demo;
  }


  public Template1 id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public Template1 templateType(String templateType) {
    
    this.templateType = templateType;
    return this;
  }

   /**
   * Get templateType
   * @return templateType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getTemplateType() {
    return templateType;
  }


  public void setTemplateType(String templateType) {
    this.templateType = templateType;
  }


  public Template1 pageDimensions(List<List<BigDecimal>> pageDimensions) {
    
    this.pageDimensions = pageDimensions;
    return this;
  }

  public Template1 addPageDimensionsItem(List<BigDecimal> pageDimensionsItem) {
    this.pageDimensions.add(pageDimensionsItem);
    return this;
  }

   /**
   * Get pageDimensions
   * @return pageDimensions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public List<List<BigDecimal>> getPageDimensions() {
    return pageDimensions;
  }


  public void setPageDimensions(List<List<BigDecimal>> pageDimensions) {
    this.pageDimensions = pageDimensions;
  }


  public Template1 documentUrl(String documentUrl) {
    
    this.documentUrl = documentUrl;
    return this;
  }

   /**
   * Get documentUrl
   * @return documentUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getDocumentUrl() {
    return documentUrl;
  }


  public void setDocumentUrl(String documentUrl) {
    this.documentUrl = documentUrl;
  }


  public Template1 permanentDocumentUrl(String permanentDocumentUrl) {
    
    this.permanentDocumentUrl = permanentDocumentUrl;
    return this;
  }

   /**
   * Get permanentDocumentUrl
   * @return permanentDocumentUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getPermanentDocumentUrl() {
    return permanentDocumentUrl;
  }


  public void setPermanentDocumentUrl(String permanentDocumentUrl) {
    this.permanentDocumentUrl = permanentDocumentUrl;
  }


  public Template1 path(String path) {
    
    this.path = path;
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getPath() {
    return path;
  }


  public void setPath(String path) {
    this.path = path;
  }


  public Template1 parentFolderId(String parentFolderId) {
    
    this.parentFolderId = parentFolderId;
    return this;
  }

   /**
   * Get parentFolderId
   * @return parentFolderId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public String getParentFolderId() {
    return parentFolderId;
  }


  public void setParentFolderId(String parentFolderId) {
    this.parentFolderId = parentFolderId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Template1 template1 = (Template1) o;
    return Objects.equals(this.name, template1.name) &&
        Objects.equals(this.description, template1.description) &&
        Objects.equals(this.publicWebForm, template1.publicWebForm) &&
        Objects.equals(this.publicSubmissions, template1.publicSubmissions) &&
        Objects.equals(this.expireSubmissions, template1.expireSubmissions) &&
        Objects.equals(this.expireAfter, template1.expireAfter) &&
        Objects.equals(this.expirationInterval, template1.expirationInterval) &&
        Objects.equals(this.allowAdditionalProperties, template1.allowAdditionalProperties) &&
        Objects.equals(this.editableSubmissions, template1.editableSubmissions) &&
        Objects.equals(this.locked, template1.locked) &&
        Objects.equals(this.webhookUrl, template1.webhookUrl) &&
        Objects.equals(this.slackWebhookUrl, template1.slackWebhookUrl) &&
        Objects.equals(this.redirectUrl, template1.redirectUrl) &&
        Objects.equals(this.firstTemplate, template1.firstTemplate) &&
        Objects.equals(this.html, template1.html) &&
        Objects.equals(this.headerHtml, template1.headerHtml) &&
        Objects.equals(this.footerHtml, template1.footerHtml) &&
        Objects.equals(this.scss, template1.scss) &&
        Objects.equals(this.encryptPdfs, template1.encryptPdfs) &&
        Objects.equals(this.encryptPdfsPassword, template1.encryptPdfsPassword) &&
        Objects.equals(this.defaults, template1.defaults) &&
        Objects.equals(this.fields, template1.fields) &&
        Objects.equals(this.sharedFieldData, template1.sharedFieldData) &&
        Objects.equals(this.fieldOrder, template1.fieldOrder) &&
        Objects.equals(this.documentMd5, template1.documentMd5) &&
        Objects.equals(this.documentFilename, template1.documentFilename) &&
        Objects.equals(this.documentParseError, template1.documentParseError) &&
        Objects.equals(this.documentState, template1.documentState) &&
        Objects.equals(this.embedDomains, template1.embedDomains) &&
        Objects.equals(this.pageCount, template1.pageCount) &&
        Objects.equals(this.documentProcessed, template1.documentProcessed) &&
        Objects.equals(this.demo, template1.demo) &&
        Objects.equals(this.id, template1.id) &&
        Objects.equals(this.templateType, template1.templateType) &&
        Objects.equals(this.pageDimensions, template1.pageDimensions) &&
        Objects.equals(this.documentUrl, template1.documentUrl) &&
        Objects.equals(this.permanentDocumentUrl, template1.permanentDocumentUrl) &&
        Objects.equals(this.path, template1.path) &&
        Objects.equals(this.parentFolderId, template1.parentFolderId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, publicWebForm, publicSubmissions, expireSubmissions, expireAfter, expirationInterval, allowAdditionalProperties, editableSubmissions, locked, webhookUrl, slackWebhookUrl, redirectUrl, firstTemplate, html, headerHtml, footerHtml, scss, encryptPdfs, encryptPdfsPassword, defaults, fields, sharedFieldData, fieldOrder, documentMd5, documentFilename, documentParseError, documentState, embedDomains, pageCount, documentProcessed, demo, id, templateType, pageDimensions, documentUrl, permanentDocumentUrl, path, parentFolderId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Template1 {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    publicWebForm: ").append(toIndentedString(publicWebForm)).append("\n");
    sb.append("    publicSubmissions: ").append(toIndentedString(publicSubmissions)).append("\n");
    sb.append("    expireSubmissions: ").append(toIndentedString(expireSubmissions)).append("\n");
    sb.append("    expireAfter: ").append(toIndentedString(expireAfter)).append("\n");
    sb.append("    expirationInterval: ").append(toIndentedString(expirationInterval)).append("\n");
    sb.append("    allowAdditionalProperties: ").append(toIndentedString(allowAdditionalProperties)).append("\n");
    sb.append("    editableSubmissions: ").append(toIndentedString(editableSubmissions)).append("\n");
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("    webhookUrl: ").append(toIndentedString(webhookUrl)).append("\n");
    sb.append("    slackWebhookUrl: ").append(toIndentedString(slackWebhookUrl)).append("\n");
    sb.append("    redirectUrl: ").append(toIndentedString(redirectUrl)).append("\n");
    sb.append("    firstTemplate: ").append(toIndentedString(firstTemplate)).append("\n");
    sb.append("    html: ").append(toIndentedString(html)).append("\n");
    sb.append("    headerHtml: ").append(toIndentedString(headerHtml)).append("\n");
    sb.append("    footerHtml: ").append(toIndentedString(footerHtml)).append("\n");
    sb.append("    scss: ").append(toIndentedString(scss)).append("\n");
    sb.append("    encryptPdfs: ").append(toIndentedString(encryptPdfs)).append("\n");
    sb.append("    encryptPdfsPassword: ").append(toIndentedString(encryptPdfsPassword)).append("\n");
    sb.append("    defaults: ").append(toIndentedString(defaults)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    sharedFieldData: ").append(toIndentedString(sharedFieldData)).append("\n");
    sb.append("    fieldOrder: ").append(toIndentedString(fieldOrder)).append("\n");
    sb.append("    documentMd5: ").append(toIndentedString(documentMd5)).append("\n");
    sb.append("    documentFilename: ").append(toIndentedString(documentFilename)).append("\n");
    sb.append("    documentParseError: ").append(toIndentedString(documentParseError)).append("\n");
    sb.append("    documentState: ").append(toIndentedString(documentState)).append("\n");
    sb.append("    embedDomains: ").append(toIndentedString(embedDomains)).append("\n");
    sb.append("    pageCount: ").append(toIndentedString(pageCount)).append("\n");
    sb.append("    documentProcessed: ").append(toIndentedString(documentProcessed)).append("\n");
    sb.append("    demo: ").append(toIndentedString(demo)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    templateType: ").append(toIndentedString(templateType)).append("\n");
    sb.append("    pageDimensions: ").append(toIndentedString(pageDimensions)).append("\n");
    sb.append("    documentUrl: ").append(toIndentedString(documentUrl)).append("\n");
    sb.append("    permanentDocumentUrl: ").append(toIndentedString(permanentDocumentUrl)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    parentFolderId: ").append(toIndentedString(parentFolderId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("description");
    openapiFields.add("public_web_form");
    openapiFields.add("public_submissions");
    openapiFields.add("expire_submissions");
    openapiFields.add("expire_after");
    openapiFields.add("expiration_interval");
    openapiFields.add("allow_additional_properties");
    openapiFields.add("editable_submissions");
    openapiFields.add("locked");
    openapiFields.add("webhook_url");
    openapiFields.add("slack_webhook_url");
    openapiFields.add("redirect_url");
    openapiFields.add("first_template");
    openapiFields.add("html");
    openapiFields.add("header_html");
    openapiFields.add("footer_html");
    openapiFields.add("scss");
    openapiFields.add("encrypt_pdfs");
    openapiFields.add("encrypt_pdfs_password");
    openapiFields.add("defaults");
    openapiFields.add("fields");
    openapiFields.add("shared_field_data");
    openapiFields.add("field_order");
    openapiFields.add("document_md5");
    openapiFields.add("document_filename");
    openapiFields.add("document_parse_error");
    openapiFields.add("document_state");
    openapiFields.add("embed_domains");
    openapiFields.add("page_count");
    openapiFields.add("document_processed");
    openapiFields.add("demo");
    openapiFields.add("id");
    openapiFields.add("template_type");
    openapiFields.add("page_dimensions");
    openapiFields.add("document_url");
    openapiFields.add("permanent_document_url");
    openapiFields.add("path");
    openapiFields.add("parent_folder_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("description");
    openapiRequiredFields.add("public_web_form");
    openapiRequiredFields.add("public_submissions");
    openapiRequiredFields.add("expire_submissions");
    openapiRequiredFields.add("expire_after");
    openapiRequiredFields.add("expiration_interval");
    openapiRequiredFields.add("allow_additional_properties");
    openapiRequiredFields.add("editable_submissions");
    openapiRequiredFields.add("locked");
    openapiRequiredFields.add("webhook_url");
    openapiRequiredFields.add("slack_webhook_url");
    openapiRequiredFields.add("redirect_url");
    openapiRequiredFields.add("first_template");
    openapiRequiredFields.add("html");
    openapiRequiredFields.add("header_html");
    openapiRequiredFields.add("footer_html");
    openapiRequiredFields.add("scss");
    openapiRequiredFields.add("encrypt_pdfs");
    openapiRequiredFields.add("encrypt_pdfs_password");
    openapiRequiredFields.add("defaults");
    openapiRequiredFields.add("fields");
    openapiRequiredFields.add("shared_field_data");
    openapiRequiredFields.add("field_order");
    openapiRequiredFields.add("document_md5");
    openapiRequiredFields.add("document_filename");
    openapiRequiredFields.add("document_parse_error");
    openapiRequiredFields.add("document_state");
    openapiRequiredFields.add("embed_domains");
    openapiRequiredFields.add("page_count");
    openapiRequiredFields.add("document_processed");
    openapiRequiredFields.add("demo");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("template_type");
    openapiRequiredFields.add("page_dimensions");
    openapiRequiredFields.add("document_url");
    openapiRequiredFields.add("permanent_document_url");
    openapiRequiredFields.add("path");
    openapiRequiredFields.add("parent_folder_id");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Template1
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (Template1.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in Template1 is not found in the empty JSON string", Template1.openapiRequiredFields.toString()));
        }
      }
      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!Template1.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Template1` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Template1.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // validate the optional field `defaults`
      if (jsonObj.getAsJsonObject("defaults") != null) {
        Template1Defaults.validateJsonObject(jsonObj.getAsJsonObject("defaults"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Template1.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Template1' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Template1> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Template1.class));

       return (TypeAdapter<T>) new TypeAdapter<Template1>() {
           @Override
           public void write(JsonWriter out, Template1 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Template1 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Template1 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Template1
  * @throws IOException if the JSON string is invalid with respect to Template1
  */
  public static Template1 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Template1.class);
  }

 /**
  * Convert an instance of Template1 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

