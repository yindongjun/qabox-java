/*
 * API v1
 * DocSpring is a service that helps you fill out and sign PDF templates.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.fluentqa.alt.client.model;

import io.fluentqa.alt.client.model.Template1Defaults;
import org.junit.Test;


/**
 * Model tests for Template1
 */
public class Template1Test {
    private final Template1 model = new Template1();

    /**
     * Model tests for Template1
     */
    @Test
    public void testTemplate1() {
        // TODO: test Template1
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'publicWebForm'
     */
    @Test
    public void publicWebFormTest() {
        // TODO: test publicWebForm
    }

    /**
     * Test the property 'publicSubmissions'
     */
    @Test
    public void publicSubmissionsTest() {
        // TODO: test publicSubmissions
    }

    /**
     * Test the property 'expireSubmissions'
     */
    @Test
    public void expireSubmissionsTest() {
        // TODO: test expireSubmissions
    }

    /**
     * Test the property 'expireAfter'
     */
    @Test
    public void expireAfterTest() {
        // TODO: test expireAfter
    }

    /**
     * Test the property 'expirationInterval'
     */
    @Test
    public void expirationIntervalTest() {
        // TODO: test expirationInterval
    }

    /**
     * Test the property 'allowAdditionalProperties'
     */
    @Test
    public void allowAdditionalPropertiesTest() {
        // TODO: test allowAdditionalProperties
    }

    /**
     * Test the property 'editableSubmissions'
     */
    @Test
    public void editableSubmissionsTest() {
        // TODO: test editableSubmissions
    }

    /**
     * Test the property 'locked'
     */
    @Test
    public void lockedTest() {
        // TODO: test locked
    }

    /**
     * Test the property 'webhookUrl'
     */
    @Test
    public void webhookUrlTest() {
        // TODO: test webhookUrl
    }

    /**
     * Test the property 'slackWebhookUrl'
     */
    @Test
    public void slackWebhookUrlTest() {
        // TODO: test slackWebhookUrl
    }

    /**
     * Test the property 'redirectUrl'
     */
    @Test
    public void redirectUrlTest() {
        // TODO: test redirectUrl
    }

    /**
     * Test the property 'firstTemplate'
     */
    @Test
    public void firstTemplateTest() {
        // TODO: test firstTemplate
    }

    /**
     * Test the property 'html'
     */
    @Test
    public void htmlTest() {
        // TODO: test html
    }

    /**
     * Test the property 'headerHtml'
     */
    @Test
    public void headerHtmlTest() {
        // TODO: test headerHtml
    }

    /**
     * Test the property 'footerHtml'
     */
    @Test
    public void footerHtmlTest() {
        // TODO: test footerHtml
    }

    /**
     * Test the property 'scss'
     */
    @Test
    public void scssTest() {
        // TODO: test scss
    }

    /**
     * Test the property 'encryptPdfs'
     */
    @Test
    public void encryptPdfsTest() {
        // TODO: test encryptPdfs
    }

    /**
     * Test the property 'encryptPdfsPassword'
     */
    @Test
    public void encryptPdfsPasswordTest() {
        // TODO: test encryptPdfsPassword
    }

    /**
     * Test the property 'defaults'
     */
    @Test
    public void defaultsTest() {
        // TODO: test defaults
    }

    /**
     * Test the property 'fields'
     */
    @Test
    public void fieldsTest() {
        // TODO: test fields
    }

    /**
     * Test the property 'sharedFieldData'
     */
    @Test
    public void sharedFieldDataTest() {
        // TODO: test sharedFieldData
    }

    /**
     * Test the property 'fieldOrder'
     */
    @Test
    public void fieldOrderTest() {
        // TODO: test fieldOrder
    }

    /**
     * Test the property 'documentMd5'
     */
    @Test
    public void documentMd5Test() {
        // TODO: test documentMd5
    }

    /**
     * Test the property 'documentFilename'
     */
    @Test
    public void documentFilenameTest() {
        // TODO: test documentFilename
    }

    /**
     * Test the property 'documentParseError'
     */
    @Test
    public void documentParseErrorTest() {
        // TODO: test documentParseError
    }

    /**
     * Test the property 'documentState'
     */
    @Test
    public void documentStateTest() {
        // TODO: test documentState
    }

    /**
     * Test the property 'embedDomains'
     */
    @Test
    public void embedDomainsTest() {
        // TODO: test embedDomains
    }

    /**
     * Test the property 'pageCount'
     */
    @Test
    public void pageCountTest() {
        // TODO: test pageCount
    }

    /**
     * Test the property 'documentProcessed'
     */
    @Test
    public void documentProcessedTest() {
        // TODO: test documentProcessed
    }

    /**
     * Test the property 'demo'
     */
    @Test
    public void demoTest() {
        // TODO: test demo
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'templateType'
     */
    @Test
    public void templateTypeTest() {
        // TODO: test templateType
    }

    /**
     * Test the property 'pageDimensions'
     */
    @Test
    public void pageDimensionsTest() {
        // TODO: test pageDimensions
    }

    /**
     * Test the property 'documentUrl'
     */
    @Test
    public void documentUrlTest() {
        // TODO: test documentUrl
    }

    /**
     * Test the property 'permanentDocumentUrl'
     */
    @Test
    public void permanentDocumentUrlTest() {
        // TODO: test permanentDocumentUrl
    }

    /**
     * Test the property 'path'
     */
    @Test
    public void pathTest() {
        // TODO: test path
    }

    /**
     * Test the property 'parentFolderId'
     */
    @Test
    public void parentFolderIdTest() {
        // TODO: test parentFolderId
    }

}
